系统设计的时候，生产者消费者模式在JAVA中通常是用BlockingQueue和线程池实现的，需要注意的是如果处理的消息类型不一致，
且一部分消息属于同步消息，调用接口等待返回值的 这一部分消息可能因为被其他消息淹没，然后消息返回超时，调用者认为消息超时



使用生产者消费者模式需要考虑的几个问题：

1.不同的消息区分优先级，或者放在不同的队列里面，以免少量重要的调用方同步等待的消息会被大量的其他消息淹没

2.队列满了怎么办

3.队列是否要定时扫描，清理过期消息，但是重要的消息不能清理


4.多线程从队列中取消息处理的并发问题，消息者线程是否线程安全

